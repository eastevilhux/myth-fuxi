apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.0"

    defaultConfig {
        minSdkVersion 23
        targetSdkVersion 30
        versionCode 204
        versionName "2.0.4"

        // 增加一个编译版本的时间
        buildConfigField "long", "RELEASE_TIME", System.currentTimeMillis() + "L"

        // 配置 含有的版本类型
        buildConfigField "int", "VERSION_DEV", VERSION_DEV
        buildConfigField "int", "VERSION_SIT", VERSION_SIT
        buildConfigField "int", "VERSION_UAT", VERSION_UAT
        buildConfigField "int", "VERSION_RELEASE", VERSION_RELEASE
        buildConfigField "int", "VERSION_COMPANY", VERSION_COMPANY
        buildConfigField "int", "VERSION_PERSONAL", VERSION_PERSONAL
        // 配置默认版本-为开发版本
        buildConfigField "int", "VERSION_TYPE", VERSION_DEV
        buildConfigField "String", "VERSION_DESCRIPTION", "\"release\""

        // NDK 加载lib的文件夹
        ndk {
            abiFilters 'armeabi', 'armeabi-v7a', 'arm64-v8a'
        }
    }

    packagingOptions {
        exclude 'META-INF/lib-uikit_release.kotlin_module'
    }

    buildTypes {
        debug {
            debuggable true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            // 设置那个版本
            buildConfigField "int", "VERSION_TYPE", VERSION_DEV
            buildConfigField "String", "VERSION_DESCRIPTION", "\"开发版本\""
        }

        company {
            debuggable true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            // 设置那个版本
            buildConfigField "int", "VERSION_TYPE", VERSION_COMPANY
            buildConfigField "String", "VERSION_DESCRIPTION", "\"开发版本\""
        }

        personal {
            debuggable true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            // 设置那个版本
            buildConfigField "int", "VERSION_TYPE", VERSION_PERSONAL
            buildConfigField "String", "VERSION_DESCRIPTION", "\"开发版本\""
        }

        sit {
            debuggable true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            // 设置那个版本
            buildConfigField "int", "VERSION_TYPE", VERSION_SIT
            buildConfigField "String", "VERSION_DESCRIPTION", "\"开发版本\""

            matchingFallbacks = ['debug']
        }

        uat {
            debuggable true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            // 设置那个版本
            buildConfigField "int", "VERSION_TYPE", VERSION_UAT
            buildConfigField "String", "VERSION_DESCRIPTION", "\"UAT版本\""

            matchingFallbacks = ['release']
        }

        release {
            debuggable false
            minifyEnabled false

            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            // 设置那个版本
            buildConfigField "int", "VERSION_TYPE", VERSION_RELEASE
            buildConfigField "String", "VERSION_DESCRIPTION", "\"生产版本\""
        }
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
        // if true, only report errors
        ignoreWarnings true
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    buildFeatures{
        dataBinding = true
    }

    dataBinding{
        enabled = true;
    }

    dexOptions {
        jumboMode true
    }

    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    api 'com.uber.autodispose:autodispose-android-archcomponents:1.0.0-RC2'
    api 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.1.0'
    api "com.readystatesoftware.systembartint:systembartint:1.0.3"
    api 'androidx.recyclerview:recyclerview:1.1.0'
    api 'io.reactivex.rxjava2:rxandroid:2.1.1'
    api 'io.reactivex.rxjava2:rxjava:2.2.6'
    api 'com.jakewharton.rxrelay2:rxrelay:2.1.1'
    api 'com.squareup.retrofit2:retrofit:2.6.2'
    api 'com.squareup.retrofit2:adapter-rxjava2:2.6.2'
    api 'com.squareup.retrofit2:converter-scalars:2.6.2'
    api 'com.squareup.retrofit2:converter-gson:2.6.2'
    api 'com.squareup.okhttp3:okhttp:3.12.10'
    api 'com.squareup.okhttp3:logging-interceptor:3.12.10'
    api 'androidx.constraintlayout:constraintlayout:2.0.4'

    api 'com.alibaba:fastjson:1.2.68'
}
